{
  "contractName": "IERC721A",
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n",
  "sourcePath": "C:\\Users\\Daniel Awodeji\\Desktop\\hereForYourSoul\\truffle\\node_modules\\erc721a\\contracts\\IERC721A.sol",
  "ast": {
    "absolutePath": "project:/node_modules/erc721a/contracts/IERC721A.sol",
    "exportedSymbols": {
      "IERC721A": [
        2813
      ]
    },
    "id": 2814,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2606,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2607,
          "nodeType": "StructuredDocumentation",
          "src": "109:59:5",
          "text": " @dev Interface of an ERC721A compliant contract."
        },
        "fullyImplemented": false,
        "id": 2813,
        "linearizedBaseContracts": [
          2813
        ],
        "name": "IERC721A",
        "nameLocation": "179:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2608,
              "nodeType": "StructuredDocumentation",
              "src": "194:76:5",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 2610,
            "name": "ApprovalCallerNotOwnerNorApproved",
            "nameLocation": "281:33:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:5"
            },
            "src": "275:42:5"
          },
          {
            "documentation": {
              "id": 2611,
              "nodeType": "StructuredDocumentation",
              "src": "323:44:5",
              "text": " The token does not exist."
            },
            "id": 2613,
            "name": "ApprovalQueryForNonexistentToken",
            "nameLocation": "378:32:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:5"
            },
            "src": "372:41:5"
          },
          {
            "documentation": {
              "id": 2614,
              "nodeType": "StructuredDocumentation",
              "src": "419:66:5",
              "text": " The caller cannot approve to their own address."
            },
            "id": 2616,
            "name": "ApproveToCaller",
            "nameLocation": "496:15:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:5"
            },
            "src": "490:24:5"
          },
          {
            "documentation": {
              "id": 2617,
              "nodeType": "StructuredDocumentation",
              "src": "520:65:5",
              "text": " Cannot query the balance for the zero address."
            },
            "id": 2619,
            "name": "BalanceQueryForZeroAddress",
            "nameLocation": "596:26:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:2:5"
            },
            "src": "590:35:5"
          },
          {
            "documentation": {
              "id": 2620,
              "nodeType": "StructuredDocumentation",
              "src": "631:51:5",
              "text": " Cannot mint to the zero address."
            },
            "id": 2622,
            "name": "MintToZeroAddress",
            "nameLocation": "693:17:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:5"
            },
            "src": "687:26:5"
          },
          {
            "documentation": {
              "id": 2623,
              "nodeType": "StructuredDocumentation",
              "src": "719:72:5",
              "text": " The quantity of tokens minted must be more than zero."
            },
            "id": 2625,
            "name": "MintZeroQuantity",
            "nameLocation": "802:16:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:5"
            },
            "src": "796:25:5"
          },
          {
            "documentation": {
              "id": 2626,
              "nodeType": "StructuredDocumentation",
              "src": "827:44:5",
              "text": " The token does not exist."
            },
            "id": 2628,
            "name": "OwnerQueryForNonexistentToken",
            "nameLocation": "882:29:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:2:5"
            },
            "src": "876:38:5"
          },
          {
            "documentation": {
              "id": 2629,
              "nodeType": "StructuredDocumentation",
              "src": "920:76:5",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 2631,
            "name": "TransferCallerNotOwnerNorApproved",
            "nameLocation": "1007:33:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:2:5"
            },
            "src": "1001:42:5"
          },
          {
            "documentation": {
              "id": 2632,
              "nodeType": "StructuredDocumentation",
              "src": "1049:53:5",
              "text": " The token must be owned by `from`."
            },
            "id": 2634,
            "name": "TransferFromIncorrectOwner",
            "nameLocation": "1113:26:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:5"
            },
            "src": "1107:35:5"
          },
          {
            "documentation": {
              "id": 2635,
              "nodeType": "StructuredDocumentation",
              "src": "1148:109:5",
              "text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
            },
            "id": 2637,
            "name": "TransferToNonERC721ReceiverImplementer",
            "nameLocation": "1268:38:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:5"
            },
            "src": "1262:47:5"
          },
          {
            "documentation": {
              "id": 2638,
              "nodeType": "StructuredDocumentation",
              "src": "1315:55:5",
              "text": " Cannot transfer to the zero address."
            },
            "id": 2640,
            "name": "TransferToZeroAddress",
            "nameLocation": "1381:21:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1402:2:5"
            },
            "src": "1375:30:5"
          },
          {
            "documentation": {
              "id": 2641,
              "nodeType": "StructuredDocumentation",
              "src": "1411:44:5",
              "text": " The token does not exist."
            },
            "id": 2643,
            "name": "URIQueryForNonexistentToken",
            "nameLocation": "1466:27:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:5"
            },
            "src": "1460:36:5"
          },
          {
            "documentation": {
              "id": 2644,
              "nodeType": "StructuredDocumentation",
              "src": "1502:79:5",
              "text": " The `quantity` minted with ERC2309 exceeds the safety limit."
            },
            "id": 2646,
            "name": "MintERC2309QuantityExceedsLimit",
            "nameLocation": "1592:31:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:2:5"
            },
            "src": "1586:40:5"
          },
          {
            "documentation": {
              "id": 2647,
              "nodeType": "StructuredDocumentation",
              "src": "1632:83:5",
              "text": " The `extraData` cannot be set on an unintialized ownership slot."
            },
            "id": 2649,
            "name": "OwnershipNotInitializedForExtraData",
            "nameLocation": "1726:35:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:2:5"
            },
            "src": "1720:44:5"
          },
          {
            "canonicalName": "IERC721A.TokenOwnership",
            "id": 2658,
            "members": [
              {
                "constant": false,
                "id": 2651,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1847:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "1839:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2650,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2653,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1960:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "1953:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2652,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1953:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2655,
                "mutability": "mutable",
                "name": "burned",
                "nameLocation": "2035:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "2030:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2654,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2030:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2657,
                "mutability": "mutable",
                "name": "extraData",
                "nameLocation": "2150:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "2143:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 2656,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2143:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1777:14:5",
            "nodeType": "StructDefinition",
            "scope": 2813,
            "src": "1770:396:5",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 2659,
              "nodeType": "StructuredDocumentation",
              "src": "2172:193:5",
              "text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
            },
            "functionSelector": "18160ddd",
            "id": 2664,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2379:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:2:5"
            },
            "returnParameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "2416:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:9:5"
            },
            "scope": 2813,
            "src": "2370:55:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2665,
              "nodeType": "StructuredDocumentation",
              "src": "2534:340:5",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 2672,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2888:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2913:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "2906:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:20:5"
            },
            "returnParameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "2949:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2669,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:6:5"
            },
            "scope": 2813,
            "src": "2879:76:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2673,
              "nodeType": "StructuredDocumentation",
              "src": "3064:88:5",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 2681,
            "name": "Transfer",
            "nameLocation": "3163:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3188:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3172:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3210:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3194:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3230:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3214:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3171:67:5"
            },
            "src": "3157:82:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "3245:94:5",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 2690,
            "name": "Approval",
            "nameLocation": "3350:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3375:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3359:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3398:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3382:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2688,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3424:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3408:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:74:5"
            },
            "src": "3344:89:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2691,
              "nodeType": "StructuredDocumentation",
              "src": "3439:117:5",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 2699,
            "name": "ApprovalForAll",
            "nameLocation": "3567:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3598:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3582:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3582:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3621:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3605:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3636:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3631:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3631:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3581:64:5"
            },
            "src": "3561:85:5"
          },
          {
            "documentation": {
              "id": 2700,
              "nodeType": "StructuredDocumentation",
              "src": "3652:76:5",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 2707,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3742:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3760:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2707,
                  "src": "3752:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:15:5"
            },
            "returnParameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3798:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2707,
                  "src": "3790:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:17:5"
            },
            "scope": 2813,
            "src": "3733:74:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2708,
              "nodeType": "StructuredDocumentation",
              "src": "3813:131:5",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 2715,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3958:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3974:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "3966:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:17:5"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4014:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "4006:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:15:5"
            },
            "scope": 2813,
            "src": "3949:72:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2716,
              "nodeType": "StructuredDocumentation",
              "src": "4027:556:5",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 2727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4597:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4631:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4623:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4653:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4645:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4673:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4665:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4705:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4690:19:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4613:102:5"
            },
            "returnParameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:0:5"
            },
            "scope": 2813,
            "src": "4588:137:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2728,
              "nodeType": "StructuredDocumentation",
              "src": "4731:690:5",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 2737,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5435:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5469:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5461:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5491:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5483:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5483:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5511:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5503:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5503:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:73:5"
            },
            "returnParameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5533:0:5"
            },
            "scope": 2813,
            "src": "5426:108:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2738,
              "nodeType": "StructuredDocumentation",
              "src": "5540:504:5",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 2747,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6058:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2740,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6088:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6080:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2742,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6110:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6102:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6102:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6130:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6122:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6070:73:5"
            },
            "returnParameters": {
              "id": 2746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:0:5"
            },
            "scope": 2813,
            "src": "6049:104:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2748,
              "nodeType": "StructuredDocumentation",
              "src": "6159:452:5",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 2755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6625:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6641:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "6633:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6653:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "6645:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6632:29:5"
            },
            "returnParameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6670:0:5"
            },
            "scope": 2813,
            "src": "6616:55:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2756,
              "nodeType": "StructuredDocumentation",
              "src": "6677:309:5",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 2763,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "7000:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7026:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "7018:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7018:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2760,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "7041:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "7036:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7036:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7017:34:5"
            },
            "returnParameters": {
              "id": 2762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7060:0:5"
            },
            "scope": 2813,
            "src": "6991:70:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2764,
              "nodeType": "StructuredDocumentation",
              "src": "7067:139:5",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 2771,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "7220:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2766,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7240:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "7232:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7232:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7231:17:5"
            },
            "returnParameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7280:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "7272:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7271:18:5"
            },
            "scope": 2813,
            "src": "7211:79:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "7296:138:5",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 2781,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7448:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7473:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7465:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7465:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7488:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7480:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7480:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7464:33:5"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7521:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7521:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7520:6:5"
            },
            "scope": 2813,
            "src": "7439:88:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2782,
              "nodeType": "StructuredDocumentation",
              "src": "7640:58:5",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 2787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "7712:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7716:2:5"
            },
            "returnParameters": {
              "id": 2786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "7742:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7742:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7741:15:5"
            },
            "scope": 2813,
            "src": "7703:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2788,
              "nodeType": "StructuredDocumentation",
              "src": "7763:60:5",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 2793,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7837:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7843:2:5"
            },
            "returnParameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "7869:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7869:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7868:15:5"
            },
            "scope": 2813,
            "src": "7828:56:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2794,
              "nodeType": "StructuredDocumentation",
              "src": "7890:90:5",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 2801,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7994:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8011:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2801,
                  "src": "8003:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8002:17:5"
            },
            "returnParameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2801,
                  "src": "8043:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8043:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:15:5"
            },
            "scope": 2813,
            "src": "7985:73:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2802,
              "nodeType": "StructuredDocumentation",
              "src": "8168:203:5",
              "text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
            },
            "id": 2812,
            "name": "ConsecutiveTransfer",
            "nameLocation": "8382:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromTokenId",
                  "nameLocation": "8418:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8402:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8402:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toTokenId",
                  "nameLocation": "8439:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8431:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8431:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8466:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8450:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8450:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8488:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8472:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8472:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8401:90:5"
            },
            "src": "8376:116:5"
          }
        ],
        "scope": 2814,
        "src": "169:8325:5",
        "usedErrors": [
          2610,
          2613,
          2616,
          2619,
          2622,
          2625,
          2628,
          2631,
          2634,
          2637,
          2640,
          2643,
          2646,
          2649
        ]
      }
    ],
    "src": "84:8411:5"
  },
  "legacyAST": {
    "absolutePath": "project:/node_modules/erc721a/contracts/IERC721A.sol",
    "exportedSymbols": {
      "IERC721A": [
        2813
      ]
    },
    "id": 2814,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2606,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2607,
          "nodeType": "StructuredDocumentation",
          "src": "109:59:5",
          "text": " @dev Interface of an ERC721A compliant contract."
        },
        "fullyImplemented": false,
        "id": 2813,
        "linearizedBaseContracts": [
          2813
        ],
        "name": "IERC721A",
        "nameLocation": "179:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2608,
              "nodeType": "StructuredDocumentation",
              "src": "194:76:5",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 2610,
            "name": "ApprovalCallerNotOwnerNorApproved",
            "nameLocation": "281:33:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:5"
            },
            "src": "275:42:5"
          },
          {
            "documentation": {
              "id": 2611,
              "nodeType": "StructuredDocumentation",
              "src": "323:44:5",
              "text": " The token does not exist."
            },
            "id": 2613,
            "name": "ApprovalQueryForNonexistentToken",
            "nameLocation": "378:32:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:5"
            },
            "src": "372:41:5"
          },
          {
            "documentation": {
              "id": 2614,
              "nodeType": "StructuredDocumentation",
              "src": "419:66:5",
              "text": " The caller cannot approve to their own address."
            },
            "id": 2616,
            "name": "ApproveToCaller",
            "nameLocation": "496:15:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:5"
            },
            "src": "490:24:5"
          },
          {
            "documentation": {
              "id": 2617,
              "nodeType": "StructuredDocumentation",
              "src": "520:65:5",
              "text": " Cannot query the balance for the zero address."
            },
            "id": 2619,
            "name": "BalanceQueryForZeroAddress",
            "nameLocation": "596:26:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:2:5"
            },
            "src": "590:35:5"
          },
          {
            "documentation": {
              "id": 2620,
              "nodeType": "StructuredDocumentation",
              "src": "631:51:5",
              "text": " Cannot mint to the zero address."
            },
            "id": 2622,
            "name": "MintToZeroAddress",
            "nameLocation": "693:17:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:5"
            },
            "src": "687:26:5"
          },
          {
            "documentation": {
              "id": 2623,
              "nodeType": "StructuredDocumentation",
              "src": "719:72:5",
              "text": " The quantity of tokens minted must be more than zero."
            },
            "id": 2625,
            "name": "MintZeroQuantity",
            "nameLocation": "802:16:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:5"
            },
            "src": "796:25:5"
          },
          {
            "documentation": {
              "id": 2626,
              "nodeType": "StructuredDocumentation",
              "src": "827:44:5",
              "text": " The token does not exist."
            },
            "id": 2628,
            "name": "OwnerQueryForNonexistentToken",
            "nameLocation": "882:29:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:2:5"
            },
            "src": "876:38:5"
          },
          {
            "documentation": {
              "id": 2629,
              "nodeType": "StructuredDocumentation",
              "src": "920:76:5",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 2631,
            "name": "TransferCallerNotOwnerNorApproved",
            "nameLocation": "1007:33:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:2:5"
            },
            "src": "1001:42:5"
          },
          {
            "documentation": {
              "id": 2632,
              "nodeType": "StructuredDocumentation",
              "src": "1049:53:5",
              "text": " The token must be owned by `from`."
            },
            "id": 2634,
            "name": "TransferFromIncorrectOwner",
            "nameLocation": "1113:26:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:5"
            },
            "src": "1107:35:5"
          },
          {
            "documentation": {
              "id": 2635,
              "nodeType": "StructuredDocumentation",
              "src": "1148:109:5",
              "text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
            },
            "id": 2637,
            "name": "TransferToNonERC721ReceiverImplementer",
            "nameLocation": "1268:38:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:5"
            },
            "src": "1262:47:5"
          },
          {
            "documentation": {
              "id": 2638,
              "nodeType": "StructuredDocumentation",
              "src": "1315:55:5",
              "text": " Cannot transfer to the zero address."
            },
            "id": 2640,
            "name": "TransferToZeroAddress",
            "nameLocation": "1381:21:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1402:2:5"
            },
            "src": "1375:30:5"
          },
          {
            "documentation": {
              "id": 2641,
              "nodeType": "StructuredDocumentation",
              "src": "1411:44:5",
              "text": " The token does not exist."
            },
            "id": 2643,
            "name": "URIQueryForNonexistentToken",
            "nameLocation": "1466:27:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:5"
            },
            "src": "1460:36:5"
          },
          {
            "documentation": {
              "id": 2644,
              "nodeType": "StructuredDocumentation",
              "src": "1502:79:5",
              "text": " The `quantity` minted with ERC2309 exceeds the safety limit."
            },
            "id": 2646,
            "name": "MintERC2309QuantityExceedsLimit",
            "nameLocation": "1592:31:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:2:5"
            },
            "src": "1586:40:5"
          },
          {
            "documentation": {
              "id": 2647,
              "nodeType": "StructuredDocumentation",
              "src": "1632:83:5",
              "text": " The `extraData` cannot be set on an unintialized ownership slot."
            },
            "id": 2649,
            "name": "OwnershipNotInitializedForExtraData",
            "nameLocation": "1726:35:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:2:5"
            },
            "src": "1720:44:5"
          },
          {
            "canonicalName": "IERC721A.TokenOwnership",
            "id": 2658,
            "members": [
              {
                "constant": false,
                "id": 2651,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1847:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "1839:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2650,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2653,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1960:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "1953:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2652,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1953:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2655,
                "mutability": "mutable",
                "name": "burned",
                "nameLocation": "2035:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "2030:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2654,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2030:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2657,
                "mutability": "mutable",
                "name": "extraData",
                "nameLocation": "2150:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 2658,
                "src": "2143:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 2656,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2143:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1777:14:5",
            "nodeType": "StructDefinition",
            "scope": 2813,
            "src": "1770:396:5",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 2659,
              "nodeType": "StructuredDocumentation",
              "src": "2172:193:5",
              "text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
            },
            "functionSelector": "18160ddd",
            "id": 2664,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2379:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:2:5"
            },
            "returnParameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "2416:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:9:5"
            },
            "scope": 2813,
            "src": "2370:55:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2665,
              "nodeType": "StructuredDocumentation",
              "src": "2534:340:5",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 2672,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2888:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2913:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "2906:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2906:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:20:5"
            },
            "returnParameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "2949:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2669,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:6:5"
            },
            "scope": 2813,
            "src": "2879:76:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2673,
              "nodeType": "StructuredDocumentation",
              "src": "3064:88:5",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 2681,
            "name": "Transfer",
            "nameLocation": "3163:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3188:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3172:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3210:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3194:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3230:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "3214:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3171:67:5"
            },
            "src": "3157:82:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "3245:94:5",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 2690,
            "name": "Approval",
            "nameLocation": "3350:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3375:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3359:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3398:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3382:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2688,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3424:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3408:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:74:5"
            },
            "src": "3344:89:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2691,
              "nodeType": "StructuredDocumentation",
              "src": "3439:117:5",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 2699,
            "name": "ApprovalForAll",
            "nameLocation": "3567:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3598:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3582:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3582:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3621:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3605:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3636:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "3631:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3631:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3581:64:5"
            },
            "src": "3561:85:5"
          },
          {
            "documentation": {
              "id": 2700,
              "nodeType": "StructuredDocumentation",
              "src": "3652:76:5",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 2707,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3742:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3760:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2707,
                  "src": "3752:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:15:5"
            },
            "returnParameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3798:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2707,
                  "src": "3790:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:17:5"
            },
            "scope": 2813,
            "src": "3733:74:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2708,
              "nodeType": "StructuredDocumentation",
              "src": "3813:131:5",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 2715,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3958:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3974:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "3966:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:17:5"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4014:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "4006:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:15:5"
            },
            "scope": 2813,
            "src": "3949:72:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2716,
              "nodeType": "StructuredDocumentation",
              "src": "4027:556:5",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 2727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4597:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4631:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4623:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4653:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4645:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4673:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4665:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2724,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4705:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "4690:19:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4613:102:5"
            },
            "returnParameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4724:0:5"
            },
            "scope": 2813,
            "src": "4588:137:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2728,
              "nodeType": "StructuredDocumentation",
              "src": "4731:690:5",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 2737,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5435:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5469:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5461:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2732,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5491:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5483:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5483:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5511:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2737,
                  "src": "5503:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5503:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:73:5"
            },
            "returnParameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5533:0:5"
            },
            "scope": 2813,
            "src": "5426:108:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2738,
              "nodeType": "StructuredDocumentation",
              "src": "5540:504:5",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 2747,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6058:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2740,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6088:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6080:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2742,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6110:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6102:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6102:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6130:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "6122:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6070:73:5"
            },
            "returnParameters": {
              "id": 2746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:0:5"
            },
            "scope": 2813,
            "src": "6049:104:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2748,
              "nodeType": "StructuredDocumentation",
              "src": "6159:452:5",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 2755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6625:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6641:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "6633:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6653:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2755,
                  "src": "6645:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6632:29:5"
            },
            "returnParameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6670:0:5"
            },
            "scope": 2813,
            "src": "6616:55:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2756,
              "nodeType": "StructuredDocumentation",
              "src": "6677:309:5",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 2763,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "7000:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2758,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7026:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "7018:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7018:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2760,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "7041:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "7036:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7036:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7017:34:5"
            },
            "returnParameters": {
              "id": 2762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7060:0:5"
            },
            "scope": 2813,
            "src": "6991:70:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2764,
              "nodeType": "StructuredDocumentation",
              "src": "7067:139:5",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 2771,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "7220:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2766,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7240:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "7232:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7232:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7231:17:5"
            },
            "returnParameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7280:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "7272:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7271:18:5"
            },
            "scope": 2813,
            "src": "7211:79:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "7296:138:5",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 2781,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7448:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7473:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7465:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7465:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7488:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7480:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7480:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7464:33:5"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2781,
                  "src": "7521:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7521:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7520:6:5"
            },
            "scope": 2813,
            "src": "7439:88:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2782,
              "nodeType": "StructuredDocumentation",
              "src": "7640:58:5",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 2787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "7712:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7716:2:5"
            },
            "returnParameters": {
              "id": 2786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2787,
                  "src": "7742:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7742:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7741:15:5"
            },
            "scope": 2813,
            "src": "7703:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2788,
              "nodeType": "StructuredDocumentation",
              "src": "7763:60:5",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 2793,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7837:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7843:2:5"
            },
            "returnParameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2793,
                  "src": "7869:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7869:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7868:15:5"
            },
            "scope": 2813,
            "src": "7828:56:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2794,
              "nodeType": "StructuredDocumentation",
              "src": "7890:90:5",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 2801,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7994:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8011:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2801,
                  "src": "8003:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8002:17:5"
            },
            "returnParameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2801,
                  "src": "8043:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8043:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:15:5"
            },
            "scope": 2813,
            "src": "7985:73:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2802,
              "nodeType": "StructuredDocumentation",
              "src": "8168:203:5",
              "text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
            },
            "id": 2812,
            "name": "ConsecutiveTransfer",
            "nameLocation": "8382:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromTokenId",
                  "nameLocation": "8418:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8402:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8402:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toTokenId",
                  "nameLocation": "8439:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8431:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8431:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8466:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8450:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8450:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8488:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "8472:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8472:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8401:90:5"
            },
            "src": "8376:116:5"
          }
        ],
        "scope": 2814,
        "src": "169:8325:5",
        "usedErrors": [
          2610,
          2613,
          2616,
          2619,
          2622,
          2625,
          2628,
          2631,
          2634,
          2637,
          2640,
          2643,
          2646,
          2649
        ]
      }
    ],
    "src": "84:8411:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-07-09T23:48:50.657Z",
  "devdoc": {
    "details": "Interface of an ERC721A compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "ConsecutiveTransfer(uint256,uint256,address,address)": {
        "details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenURI(uint256)": {
        "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
      },
      "totalSupply()": {
        "details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "ApprovalCallerNotOwnerNorApproved()": [
        {
          "notice": "The caller must own the token or be an approved operator."
        }
      ],
      "ApprovalQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ],
      "ApproveToCaller()": [
        {
          "notice": "The caller cannot approve to their own address."
        }
      ],
      "BalanceQueryForZeroAddress()": [
        {
          "notice": "Cannot query the balance for the zero address."
        }
      ],
      "MintERC2309QuantityExceedsLimit()": [
        {
          "notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
        }
      ],
      "MintToZeroAddress()": [
        {
          "notice": "Cannot mint to the zero address."
        }
      ],
      "MintZeroQuantity()": [
        {
          "notice": "The quantity of tokens minted must be more than zero."
        }
      ],
      "OwnerQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ],
      "OwnershipNotInitializedForExtraData()": [
        {
          "notice": "The `extraData` cannot be set on an unintialized ownership slot."
        }
      ],
      "TransferCallerNotOwnerNorApproved()": [
        {
          "notice": "The caller must own the token or be an approved operator."
        }
      ],
      "TransferFromIncorrectOwner()": [
        {
          "notice": "The token must be owned by `from`."
        }
      ],
      "TransferToNonERC721ReceiverImplementer()": [
        {
          "notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
        }
      ],
      "TransferToZeroAddress()": [
        {
          "notice": "Cannot transfer to the zero address."
        }
      ],
      "URIQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}